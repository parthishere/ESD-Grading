# Generated by Django 5.1.6 on 2025-03-15 06:23

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('due_date', models.DateTimeField()),
                ('total_points', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('batch', models.DateField()),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_required', models.BooleanField(default=True)),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parts', to='labs.lab')),
            ],
            options={
                'ordering': ['lab', 'order'],
            },
        ),
        migrations.CreateModel(
            name='QualityCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('max_points', models.PositiveIntegerField(default=10)),
                ('weight', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_criteria', to='labs.part')),
            ],
            options={
                'verbose_name_plural': 'Quality Criteria',
                'ordering': ['part', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Signoff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('comments', models.TextField(blank=True)),
                ('date_submitted', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taken_signoffs', to=settings.AUTH_USER_MODEL)),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signoffs', to='labs.part')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signoffs', to='labs.student')),
            ],
            options={
                'ordering': ['-date_updated'],
                'unique_together': {('student', 'part')},
            },
        ),
        migrations.CreateModel(
            name='EvaluationSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cleanliness', models.CharField(choices=[('ER', 'Exceeds Requirements'), ('MR', 'Meets Requirements'), ('MM', 'Minimally Meets'), ('IR', 'Improvement Required'), ('ND', 'Not Demonstrated')], max_length=2)),
                ('cleanliness_max_marks', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('hardware', models.CharField(choices=[('ER', 'Exceeds Requirements'), ('MR', 'Meets Requirements'), ('MM', 'Minimally Meets'), ('IR', 'Improvement Required'), ('ND', 'Not Demonstrated')], max_length=2)),
                ('hardware_max_marks', models.DecimalField(decimal_places=2, default=10.0, max_digits=5)),
                ('timeliness', models.CharField(choices=[('ER', 'Exceeds Requirements'), ('MR', 'Meets Requirements'), ('MM', 'Minimally Meets'), ('IR', 'Improvement Required'), ('ND', 'Not Demonstrated')], max_length=2)),
                ('timeliness_max_marks', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('student_preparation', models.CharField(choices=[('ER', 'Exceeds Requirements'), ('MR', 'Meets Requirements'), ('MM', 'Minimally Meets'), ('IR', 'Improvement Required'), ('ND', 'Not Demonstrated')], max_length=2)),
                ('student_preparation_max_marks', models.DecimalField(decimal_places=2, default=10.0, max_digits=5)),
                ('code_implementation', models.CharField(choices=[('ER', 'Exceeds Requirements'), ('MR', 'Meets Requirements'), ('MM', 'Minimally Meets'), ('IR', 'Improvement Required'), ('ND', 'Not Demonstrated')], max_length=2)),
                ('code_implementation_max_marks', models.DecimalField(decimal_places=2, default=15.0, max_digits=5)),
                ('commenting', models.CharField(choices=[('ER', 'Exceeds Requirements'), ('MR', 'Meets Requirements'), ('MM', 'Minimally Meets'), ('IR', 'Improvement Required'), ('ND', 'Not Demonstrated')], max_length=2)),
                ('commenting_max_marks', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('schematic', models.CharField(choices=[('ER', 'Exceeds Requirements'), ('MR', 'Meets Requirements'), ('MM', 'Minimally Meets'), ('IR', 'Improvement Required'), ('ND', 'Not Demonstrated')], max_length=2)),
                ('schematic_max_marks', models.DecimalField(decimal_places=2, default=10.0, max_digits=5)),
                ('course_participation', models.CharField(choices=[('ER', 'Exceeds Requirements'), ('MR', 'Meets Requirements'), ('MM', 'Minimally Meets'), ('IR', 'Improvement Required'), ('ND', 'Not Demonstrated')], max_length=2)),
                ('course_participation_max_marks', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('signoff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation_sheet', to='labs.signoff')),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('instructor', 'Instructor'), ('ta', 'Teaching Assistant'), ('student', 'Student')], default='ta', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='role', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QualityScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='labs.qualitycriteria')),
                ('signoff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_scores', to='labs.signoff')),
            ],
            options={
                'unique_together': {('signoff', 'criteria')},
            },
        ),
    ]
